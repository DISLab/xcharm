mainmodule charm_pagerank_async {
	extern module GraphGenerator;

	readonly CmiUInt8 N;
	readonly double D;
  // Handle to the test driver (chare)
  readonly CProxy_TestDriver               driverProxy;

  mainchare TestDriver {
    entry TestDriver (CkArgMsg *args);
		entry void startGraphConstruction();
    entry [threaded] void doPageRank();
		entry void startVerificationPhase();
    entry [reductiontarget] void done();
		entry void exit();
  };

	class PageRankEdge; 
  array [1D] PageRankVertex {
    entry PageRankVertex();
		entry void connectVertex(const PageRankEdge & edge);
		entry void start();
		entry void update(const int & iter, const double & r);
		entry void verify();
		entry void print();
  };

	// Setup required for the graph generation library
  message MeshStreamerMessage<ArrayDataItem<PageRankEdge, int> >;
  group ArrayMeshStreamer<PageRankEdge, int, PageRankVertex, SimpleMeshRouter>;
  group MeshStreamer<ArrayDataItem<PageRankEdge, int>, SimpleMeshRouter>;

	//FIXME:charmxi bug
	group GraphLib__Generator_Tram<PageRankGraph, Options,		
		GraphLib::GraphType::Directed,
		GraphLib::GraphGeneratorType::Kronecker,
		CProxy_ArrayMeshStreamer<PageRankEdge, int, PageRankVertex, SimpleMeshRouter> >;

	//FIXME:charmxi bug
	group GraphLib__Generator_Charm<PageRankGraph, Options,		
		GraphLib::GraphType::Directed,
		GraphLib::GraphGeneratorType::Kronecker>;
};
