mainmodule charm_sssp {
	extern module GraphGenerator;

  // Handle to the test driver (chare)
  readonly CProxy_TestDriver               driverProxy;

  mainchare TestDriver {
    entry TestDriver (CkArgMsg *args);
    entry [reductiontarget] void start();
		entry void startVerificationPhase();
    entry [reductiontarget] void done(CmiUInt8 globalNumScannedEdges);
    //entry void startVerificationPhase();
    //entry [reductiontarget] void reportErrors(CmiInt8 globalNumErrors);
    //entry void checkErrors();
		entry void startGraphConstruction();
		entry void exit();
  };

	class SSSPEdge; 
  array [1D] SSSPVertex {
    entry SSSPVertex();
		entry void connectVertex(const SSSPEdge & edge);
		entry void make_root();
		entry void update(const CmiInt8 & v, const double & w); 
		entry void verify();
		entry void check(const double & w);
		entry void print();
  };

	group GraphGenerator<CProxy_SSSPVertex, SSSPEdge, Options>;
};
