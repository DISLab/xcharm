mainmodule ucharelib_bfs {
	extern module GraphGenerator;
	extern module uChareLib;

  // Mean arrity of the graph 
  readonly int                             K;
  // Graph size (number of vertices)
  readonly CmiUInt8                         N;
  // Handle to the test driver (chare)
  readonly CProxy_TestDriver               driverProxy;

  mainchare TestDriver {
    entry TestDriver (CkArgMsg *args);
		entry [reductiontarget] void init();
    entry [reductiontarget] void start();
		entry [reductiontarget] void startGraphConstruction();
    entry [reductiontarget] void done(CmiUInt8 globalNumScannedEdges);
    entry [reductiontarget] void exit();

		entry [reductiontarget] void testCompletion();
  };

	class BFSEdge;
  uchare array [1D] BFSVertex {
    //entry BFSVertex();
		entry void connectVertex(const BFSEdge & edge);
		entry void update(); 
		entry void getScannedEdgesNum();
		entry void verify();
  };

	group GraphGenerator<CProxy_uChare_BFSVertex, BFSEdge, Options>;

//TODO: Can it be hidden?`
	array [1D] uChareSet<BFSVertex, CProxy_BFSVertex, CBase_BFSVertex>;
  // Setup required for the communication library
  message MeshStreamerMessage<ArrayDataItem<Message, int> >;
  group ArrayMeshStreamer<Message, int, 
				uChareSet<BFSVertex, CProxy_BFSVertex, CBase_BFSVertex>, SimpleMeshRouter>;
  group MeshStreamer<ArrayDataItem<Message, int>, SimpleMeshRouter>;
};
